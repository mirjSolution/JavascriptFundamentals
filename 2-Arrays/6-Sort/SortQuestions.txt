sort() -> method use to sort elements from ascending to descending
       -> To sort an array in descending order there is a callback function passed to sort() method which we refer to as compare function
        
Q.1) What will be the output in case an array has 'undefined' while sorting the values ?
A.1) Undefined is always placed on the end of the array because they are not sorted
Q.2) How will sort an object literal ? 
A.2) const employees = [
  { eNo: 1001, salary: 3000 },
  { eNo: 1002, salary: 2200 },
  { eNo: 1003, salary: 3400 },
  { eNo: 1004, salary: 6000 },
];

const sortEmployeesDescending = employees.sort((a, b) => {
  if (a.salary < b.salary) {
    return 1;
  }
  if (a.salary > b.salary) {
    return -1;
  }

  if (a.salary == b.salary) {
    return 0;
  }
});

console.log(
  sortEmployees.map((elem) => {
    return elem.salary;
  })
);

Q.3) How will you sort a numeric array ? 
-> you have to use compare function
A.3) let numbers = [1, 4, 56, 9 , 100]
console.log(numbers.sort((a, b) => {
       if(a > b) {
         return 1;
       }

       if(a < b) {
         return -1;
       }

       if(a == b) {
         return 0;
       }
}))
Q.4) Sort all values of array in descending order.
let numbers = [1, 4, 56, 9 , 100]
console.log(numbers.sort((a, b) => {
       if(a > b) {
         return -1;
       }

       if(a < b) {
         return 1;
       }

       if(a == b) {
         return 0;
       }
}))